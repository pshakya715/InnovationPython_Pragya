
# 1. Write a program that calculates and prints the value according to the given formula:
# Q = Square root of [(2*C*D)/H]
# Following are the fixed values of C and H:
# C is 50.
# H is 30.
# D is a variable whose values should be input to your program in a comma-separated sequence.

import math
C = 50
H = 30
value = []
numbers = input("Enter the values for D: ")
numbers = numbers.split(',')

for D in numbers:
    Q = round(math.sqrt(2*C*int(D)/H))
    value.append(Q)

print(value)


# 2. Define a class named Shape and its subclass Square. The Square class has an init function which
# takes length as argument. Both classes have an area function which can print the area of the shape
# where Shapeâ€™s area is 0 by default.


class Shape:

    def __init__(self):
        pass

    def area(self):
        return 0


class Square(Shape):

    def __init__(self, length=0):
        Shape.__init__(self)
        self.length = length

    def area(self):
        return self.length*self.length


AreaOfSquare = Square(4)

print(AreaOfSquare.area())

print(Square().area())


# 3. Create a class to find three elements that sum to zero from a set of n real numbers
# Input array: [-25,-10,-7,-3,2,4,8,10]
# Expected output: [[-10,2,8],[-7,-3,10]]

class Elements:
    def s(self, nums):
        nums, result, i = sorted(nums), [], 0
        while i < len(nums) - 2:
            j, k = i + 1, len(nums) - 1
            while j < k:
                if nums[i] + nums[j] + nums[k] < 0:
                    j += 1
                elif nums[i] + nums[j] + nums[k] > 0:
                    k -= 1
                else:
                    result.append([nums[i], nums[j], nums[k]])
                    j, k = j + 1, k - 1

                    while j < k and nums[j] == nums[j - 1]:
                        j += 1
                    while j < k and nums[k] == nums[k + 1]:
                        k -= 1
            i += 1
            while i < len(nums) - 2 and nums[i] == nums[i - 1]:
                i += 1

        return result


print(Elements().s([-25,-10,-7,-3,2,4,8,10]))


# 4. Create a Time class and initialize it with hours and minutes.
# Create a method addTime which should take two Time objects and add them.
# E.g.- (2 hour and 50 min)+(1 hr and 20 min) is (4 hr and 10 min)
# Create another method displayTime which should print the time.
# Also create a method displayMinute which should display the total minutes in the Time.
# E.g.- (1 hr 2 min) should display 62 minute.
class Time:
    def __init__(self, hours, minutes):
        self.hours = hours
        self.minutes = minutes

    def addTime(t1, t2):
        t3 = Time(0, 0)
        if t1.minutes + t2.minutes > 60:
            t3.hours = (t1.minutes+t2.minutes)/60
        t3.hour = t3.hours+t1.hours+t2.hours
        t3.minutes = (t1.minutes + t2.minutes)-(((t1.minutes + t2.minutes)/60)*60)
        return t3

    def displayTime(self):
        print( "Time is ", self.hours, "hours and ", self.minutes, "minutes.")

    def displayMinute(self):
        print((self.hours*60)+self.minutes)


x = Time(2,50)
y = Time(1,20)
z = Time.addTime(x,y)
z.displayTime()
z.displayMinute()





